{"version":3,"sources":["Components/NavBar.js","Components/BlogComponents/Blog.js","Components/Item.js","Components/TopPage.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","name","this","props","onPageChange","className","onClick","handleClick","bind","React","Component","Blog","blogClose","closed","onBlogClose","state","blogClass","blogOpen","setState","blogData","currentBlog","onAnimationEnd","animEnd","title","date","Item","isBlogs","projectCard","Fragment","blogCard","type","clickAction","src","alt","TopPage","openBlog","item","clickedBlog","console","log","handleBlogClose","data","returnFilteredData","filterKey","filter","category","sectionHasData","i","length","BlogData","ProjectData","map","index","key","summary","App","handlePageChange","e","page","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e285cde5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n    handleClick(name) {\r\n        this.props.onPageChange(name);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"nav-bar\">\r\n                <div className=\"navButton\" onClick={this.handleClick.bind(this, \"main\")}>\r\n                    <h4>Projects</h4>\r\n                </div>\r\n                <div className=\"navButton\" onClick={this.handleClick.bind(this, \"blog\")}>\r\n                    <h4>Blog</h4>\r\n                </div>\r\n                <div className=\"navButton\" onClick={this.handleClick.bind(this, \"contact\")}>\r\n                    <h4>Contact</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport '../../Stylesheets/BlogStyles.css';\r\n\r\nclass Blog extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            blogClass: 'blogClosed'\r\n        };\r\n    }\r\n\r\n    animEnd(blogOpen){\r\n        if(blogOpen === 'open'){\r\n            this.props.blogOpen = '';\r\n            this.setState({blogClass: 'blogOpen'});\r\n        } else if (blogOpen === 'closed'){\r\n            this.props.blogOpen = '';\r\n            this.setState({blogClass: 'blogClosed'});\r\n        }\r\n    }\r\n\r\n    blogClose = (closed) => {\r\n        this.props.onBlogClose(closed);\r\n    }\r\n\r\n    render() {\r\n        let blogOpen = this.props.blogOpen;\r\n        let blogData = this.props.currentBlog;\r\n\r\n        return (\r\n            <div className={this.props.blogOpen + this.state.blogClass} onAnimationEnd={() => this.animEnd(blogOpen)}>\r\n                <div className='backButton' onClick={this.blogClose.bind(this, 'closed ')}>Back</div>\r\n                <div className='header'>\r\n                    <h1>{blogData != null && blogData.title}</h1>\r\n                    <img />\r\n                    <p>{blogData != null && blogData.date}</p>\r\n                </div>\r\n                <div className='textArea'>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Blog;","import React from 'react';\r\nimport '../Stylesheets/ItemStyles.css';\r\n\r\nclass Item extends React.Component {\r\n\r\n    render(){\r\n        let isBlogs;\r\n\r\n        var projectCard = <React.Fragment><div className=\"liveLink\">\r\n                            Project\r\n                          </div>\r\n                          <div className=\"githubLink\">\r\n                            Code\r\n                          </div></React.Fragment>;\r\n\r\n        var blogCard = <React.Fragment><div className=\"readBlog\">\r\n                        Insert blog name here\r\n                       </div></React.Fragment>;\r\n\r\n        isBlogs = (this.props.type === \"blog\" ? true: false);\r\n\r\n        return(\r\n            <div onClick={this.props.clickAction} className={\"item \" + (isBlogs ? 'blogItem' : this.props.type)} >\r\n                <img src=\"\" alt=\"Project/Blog view\" />\r\n                {\r\n                    isBlogs ? blogCard : projectCard\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport Blog from './BlogComponents/Blog';\r\nimport '../Stylesheets/TopPageStyles.css';\r\n\r\nimport '../Stylesheets/SpawnBoxStyles.css';\r\nimport BlogData from '../Data/blogs.json';\r\nimport ProjectData from '../Data/projects.json';\r\n\r\nimport Item from './Item';\r\nimport '../Stylesheets/SpawnStyles.css';\r\n\r\nclass TopPage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            clickedBlog: '',\r\n            blogOpen: ''\r\n        }\r\n    }\r\n\r\n    openBlog = (item) => {\r\n        this.setState({clickedBlog: item, blogOpen: 'open '});\r\n        console.log(this.state);\r\n    }\r\n\r\n    handleBlogClose = (closed) => {\r\n        this.setState({clickedBlog: null, blogOpen: closed});\r\n    }\r\n\r\n    render(){\r\n        const title = this.props.title;    \r\n        let data;\r\n\r\n        if(title === 'blog'){ data = BlogData; }\r\n        else if(title === 'main'){ data = ProjectData; }\r\n        else{ data = null; }\r\n\r\n        function returnFilteredData(filterKey) {\r\n            return data.filter(data => data.category === filterKey);\r\n        }\r\n\r\n        function sectionHasData(category){\r\n            for (let i = 0; i < data.length; i++) {\r\n                if(data[i].category === category)\r\n                    return true;           \r\n            }\r\n            return false;\r\n        }\r\n\r\n        return(\r\n            <div className=\"topPage\">\r\n            {\r\n            data != null ?\r\n            <div className='spawnBox'>\r\n                <div className=\"sections\">\r\n                    {sectionHasData(\"Web Dev\") ? \r\n                        (\r\n                            <div className=\"section \">\r\n                            <div className=\"headerBox\">\r\n                                <h2>Web Dev</h2>\r\n                            </div>\r\n                            {\r\n                                returnFilteredData(\"Web Dev\").map((item, index) => (\r\n                                    <Item clickAction={this.props.title === \"blog\" ? () => this.openBlog(item) : null} key={index} title={item.title} category={item.category} date={item.date} summary={item.summary} type={this.props.title} />\r\n                                ))\r\n                            }\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n                    {sectionHasData(\"Software Dev\") ? \r\n                        (\r\n                            <div className=\"section \">\r\n                            <div className=\"headerBox\">\r\n                                <h2>Software Dev</h2>\r\n                            </div>\r\n                            {\r\n                                returnFilteredData(\"Software Dev\").map((item, index) => (\r\n                                    <Item clickAction={this.props.title === \"blog\" ? () => this.openBlog(item) : null} key={index} title={item.title} category={item.category} date={item.date} summary={item.summary} type={this.props.title} />\r\n                                ))\r\n                            }\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n                    {sectionHasData(\"Game Dev\") ? \r\n                        (\r\n                            <div className=\"section \">\r\n                            <div className=\"headerBox\">\r\n                                <h2>Game Dev</h2>\r\n                            </div>\r\n                            {\r\n                                returnFilteredData(\"Game Dev\").map((item, index) => (\r\n                                    <Item clickAction={this.props.title === \"blog\" ? () => this.openBlog(item) : null} key={index} title={item.title} category={item.category} date={item.date} summary={item.summary} type={this.props.title} />\r\n                                ))\r\n                            }\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n                </div> \r\n            <Blog onBlogClose={this.handleBlogClose} blogOpen={this.state.blogOpen} currentBlog={this.state.clickedBlog}/>\r\n            </div> : null\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n \r\n}\r\n\r\nexport default TopPage;","import React from 'react';\r\nimport NavBar from './Components/NavBar';\r\nimport TopPage from './Components/TopPage';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n        this.state = {\r\n            page: \"main\"\r\n        };\r\n    }\r\n\r\n    handlePageChange = e => {\r\n        this.setState({page: e});\r\n    }\r\n\r\n    render(){\r\n        return (  \r\n            <div className='app'>\r\n                <NavBar page=\"main\" onPageChange={this.handlePageChange}/>\r\n                <TopPage title={this.state.page}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Stylesheets/MainStyles.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}